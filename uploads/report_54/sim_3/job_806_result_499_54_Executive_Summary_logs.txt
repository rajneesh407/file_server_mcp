---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last):
 Report "Accuracy of LLM-as-a-judge (Credit Card Queries)" <v1>, line 63, in <definition>
        56 | if missing:
        57 |     raise AssertionError(
        58 |         f"Expected column(s) {missing} to be present but not provided in the data. "
        59 |         "Please provide the column(s) and rerun."
        60 |     )
        62 | df["temp_llm_similarity"] = df["output"].apply(lambda x: x._asdict() if hasattr(x, "_asdict") else x)
---->   63 | df["classified_intent"] = df["temp_llm_similarity"].apply(lambda x: int(float(x["score"])))
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        64 | df["llm_answer_relevancy_reason"] = df["temp_llm_similarity"].apply(lambda x: x["justification"])
    Local variables:
      job           = <Job job_type="Simulati...: Sep-06-2025 04:35 PM">
      data          = {'current': <spark df>}
      raw_output    = {}
      expected_cols = ['output', 'user_question', 'llm_response']
      missing       = []
 File "/opt/corridor/venv/lib/python3.11/site-packages/pandas/core/series.py", line 4771, in Series.apply
      4661 | def apply(
      4662 |     self,
      4663 |     func: AggFuncType,
(...)
      4666 |     **kwargs,
      4667 | ) -> DataFrame | Series:
      4668 |     """
      4669 |     Invoke function on values of Series.
      4670 | 
(...)
      4769 |     dtype: float64
      4770 |     """
----> 4771 |     return SeriesApply(self, func, convert_dtype, args, kwargs).apply()
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File "/opt/corridor/venv/lib/python3.11/site-packages/pandas/core/apply.py", line 1123, in SeriesApply.apply
      1118 | if isinstance(self.f, str):
      1119 |     # if we are a string, try to dispatch
      1120 |     return self.apply_str()
      1122 | # self.f is Callable
----> 1123 | return self.apply_standard()
                    ^^^^^^^^^^^^^^^^^^^^^
 File "/opt/corridor/venv/lib/python3.11/site-packages/pandas/core/apply.py", line 1174, in SeriesApply.apply_standard
      1171 |         mapped = obj._values.map(f)
      1172 |     else:
      1173 |         values = obj.astype(object)._values
----> 1174 |         mapped = lib.map_infer(
                              ^^^^^^^^^^^^^^
      1175 |             values,
                     ^^^^^^^^^^^
      1176 |             f,
                     ^^^^^^
      1177 |             convert=self.convert_dtype,
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      1178 |         )
                     ^
      1180 | if len(mapped) and isinstance(mapped[0], ABCSeries):
      1181 |     # GH#43986 Need to do list(mapped) in order to get treated as nested
      1182 |     #  See also GH#25959 regarding EA support
 File "/opt/corridor/venv/lib/python3.11/site-packages/pandas/_libs/lib.pyx", line 2924, in pandas._libs.lib.map_infer
 Report "Accuracy of LLM-as-a-judge (Credit Card Queries)" <v1>, line 63, in <lambda>
        56 | if missing:
        57 |     raise AssertionError(
        58 |         f"Expected column(s) {missing} to be present but not provided in the data. "
        59 |         "Please provide the column(s) and rerun."
        60 |     )
        62 | df["temp_llm_similarity"] = df["output"].apply(lambda x: x._asdict() if hasattr(x, "_asdict") else x)
---->   63 | df["classified_intent"] = df["temp_llm_similarity"].apply(lambda x: int(float(x["score"])))
                                                                                           ^^^^^^^^^^
        64 | df["llm_answer_relevancy_reason"] = df["temp_llm_similarity"].apply(lambda x: x["justification"])
    Local variables:
      x             = 'asd'
TypeError: string indices must be integers, not 'str'
Logs:
[2025-09-06 11:07:09 UTC] Error occured while running Report "Accuracy of LLM-as-a-judge (Credit Card Queries)" definition